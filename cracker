package assignment1;

import java.io.BufferedReader;
import java.io.FileReader;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.HashMap;
import java.util.Map;

public class Cracker {
	public static String toHex(byte[] bytes)
	{
		BigInteger bi = new BigInteger(1, bytes);
		return String.format("%0" + (bytes.length << 1) + "X", bi);
	}
	
    public static void main(String[] args) {
        try {
            // Read the shadow file and store username and hash pairs in a dictionary
            Map<String, String> shadowMap = new HashMap<>();
            BufferedReader shadowReader = new BufferedReader(new FileReader("shadow"));
            String line;
            System.out.println("\n-----------------------------\nPerforming attack on shadow\n");
            while ((line = shadowReader.readLine()) != null) {
                String[] parts = line.split(":");

                String username = parts[0];
                String salthash = parts[1];
                
                String[] sparts = salthash.split("\\$");

                   
                String salt = sparts[2];
                String hash = sparts[3];

                System.out.println(username+salthash);    
                System.out.println("Salt: " + salt);
                System.out.println("Hash: " + hash);
                
                shadowMap.put(username, salt+hash);
                //System.out.println(username+salthash);
//                    System.out.print(parts[0]+":");
//                    System.out.print(salthash.substring(0,8)+":");
//                    System.out.println(salthash.substring(8));
                //Reading successfully 
                
            }
            
            shadowReader.close();

            // Read the common passwords file and check against the shadow file
            BufferedReader commonPasswordsReader = new BufferedReader(new FileReader("common-passwords.txt"));
            //BufferedReader commonPasswordsReader = new BufferedReader(new FileReader("10k-most-common.txt"));
            while ((line = commonPasswordsReader.readLine()) != null) {
                String commonPassword = line.trim();
                //System.out.println(commonPassword);
                for (Map.Entry<String, String> entry : shadowMap.entrySet()) {
                    String username = entry.getKey();
                	String salt = entry.getValue().substring(0,8);
                	
                    String shadowHash = entry.getValue().substring(8);
                    
                    String input = salt+commonPassword; 
                    
                    
                    String calculatedHash =  MD5Shadow.crypt(commonPassword, salt);
                    
                    if (calculatedHash.equals(shadowHash)) {
                        System.out.println( username + ":" + commonPassword);
                    }
                    
                }
            }
            commonPasswordsReader.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        


    }
}
